/*There are a total of numCourses courses you have to take, labeled from 0 to numCourses-1.

Some courses may have prerequisites, for example to take course 0 you have to first take course 1, which is expressed as a pair: [0,1]

Given the total number of courses and a list of prerequisite pairs, is it possible for you to finish all courses?

Input: numCourses = 2, prerequisites = [[1,0],[0,1]]
Output: false
Explanation: There are a total of 2 courses to take. 
             To take course 1 you should have finished course 0, and to take course 0 you should
             also have finished course 1. So it is impossible.*/



class Solution {
public:
    
    bool cycle(bool vis[],vector<int> g[],int x)
    {
        vis[x]=true;
        bool c=false;
        // cout<<x<<endl;
        for(auto i:g[x])
        {
            if(vis[i])
                return true;
            else
            {
                c=c || cycle(vis,g,i);
            }
        }
        vis[x]=false;
        return c;
    }
    bool canFinish(int num, vector<vector<int>>& pre) {
        
        int n=pre.size();
        // cout<<n<<endl;
        vector<int> g[num];
        for(int i=0;i<n;i++)
        {
            int a=pre[i][0],b=pre[i][1];
            // cout<<a<<" "<<b<<endl;
            g[a].push_back(b);
        }
        
        bool vis[num];
        memset(vis,false,sizeof vis);
        for(int i=0;i<num;i++)
        { 
            if(cycle(vis,g,i))
                return false;
        }
        return true;
    }
};